version: "3"

# see .env file for docker-compose ENV variables required for proper run

services:
  nginx:
    image: "nginx:stable"
    environment:
      NGINX_PORT: "[::]:80"
    volumes:
      - ".:/var/www/html:rw"
      - "./Docker/nginx/nginx.conf:/etc/nginx/conf.d/default.template:ro"
    restart: "unless-stopped"
    networks:
      default:
        aliases:
          - "campaign.remp.press"
          - "mailer.remp.press"
          - "sso.remp.press"
          - "beam.remp.press"
          - "tracker.beam.remp.press"
          - "segments.beam.remp.press"
          - "mailhog.remp.press"
          - "kibana.beam.remp.press"
    command: /bin/bash -c "envsubst '$$NGINX_PORT' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"

  mysql:
    image: "mysql:5.7" # minimal 5.7.8
    volumes:
      - "mysql-data:/var/lib/mysql"
      - "./Docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql"
    command:
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_unicode_ci"
      - "--skip-character-set-client-handshake"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
      MYSQL_ROOT_PASSWORD: "secret"
    restart: "unless-stopped"

  redis:
    image: "redis:3.2"
    volumes:
      - "redis-data:/data"

  mailhog:
    image: "mailhog/mailhog:v1.0.0"
    environment:
      MH_HOSTNAME: "mailhog.remp.press"

  adminer:
    build: "./Docker/php"
    volumes:
      - ".:/var/www/html:rw"

  # campaign

  campaign:
    build: "./Docker/php"
    environment:
      APP_NAME: "Campaign"
      PHP_IDE_CONFIG: "serverName=campaign.remp.press"
    domainname: "campaign.remp.press"
    hostname: "campaign"
    volumes:
      - "./Campaign:/var/www/html/Campaign:rw"
      - "./Composer:/var/www/html/Composer:rw"
      - "./Package:/var/www/html/Package:rw"
      - "./phpcs:/var/www/html/phpcs:ro"
      - "./phpcbf:/var/www/html/phpcbf:ro"
    depends_on:
      - "nginx"
      - "mysql"
      - "redis"
    restart: "unless-stopped"

  # mailer

  mailer:
    domainname: "mailer.remp.press"
    hostname: "mailer"
    environment:
      APP_NAME: "Mailer"
      PHP_IDE_CONFIG: "serverName=mailer.remp.press"
    build: "./Docker/php"
    volumes:
      - "./Mailer:/var/www/html/Mailer:rw"
      - "./Composer:/var/www/html/Composer:rw"
      - "./Package:/var/www/html/Package:rw"
    depends_on:
      - "nginx"
      - "mysql"
      - "redis"
      - "mailhog"
    restart: "unless-stopped"

  # sso

  sso:
    build: "./Docker/php"
    environment:
      APP_NAME: "Sso"
      PHP_IDE_CONFIG: "serverName=sso.remp.press"
    domainname: "sso.remp.press"
    hostname: "sso"
    volumes:
      - "./Sso:/var/www/html/Sso:rw"
      - "./Composer:/var/www/html/Composer:rw"
      - "./Package:/var/www/html/Package:rw"
      - "./phpcs:/var/www/html/phpcs:ro"
      - "./phpcbf:/var/www/html/phpcbf:ro"
    depends_on:
      - "nginx"
      - "mysql"
      - "redis"
    restart: "unless-stopped"

  # beam

  beam:
    domainname: "beam.remp.press"
    hostname: "beam"
    build: "./Docker/php"
    environment:
      APP_NAME: "Beam"
      PHP_IDE_CONFIG: "serverName=beam.remp.press"
    volumes:
      - "./Beam:/var/www/html/Beam:rw"
      - "./Composer:/var/www/html/Composer:rw"
      - "./Package:/var/www/html/Package:rw"
      - "./phpcs:/var/www/html/phpcs:ro"
      - "./phpcbf:/var/www/html/phpcbf:ro"
    depends_on:
      - "nginx"
      - "mysql"
      - "redis"
    restart: "unless-stopped"

  zookeeper:
    image: "wurstmeister/zookeeper"
    hostname: "zookeeper"
    ports:
      - "2181:2181"

  kafka:
    image: "wurstmeister/kafka"
    hostname: "kafka"
    ports:
      - "9092:9092"
    depends_on:
      - "zookeeper"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: "kafka"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_CREATE_TOPICS: "beam_events:1:1"
      KAFKA_BROKER_ID: "1001"
      KAFKA_RESERVED_BROKER_MAX_ID: "1001"
    volumes:
      - "kafka-data:/data"

  telegraf:
    build: "./Docker/telegraf"
    volumes:
      - "./Docker/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro"
    depends_on:
      - "kafka"
      - "elasticsearch"
    restart: "unless-stopped"

  elasticsearch:
    build: "./Docker/elasticsearch"
    volumes:
      - "./Docker/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml"
      - "elastic-data:/usr/share/elasticsearch/data"

  kibana:
    image: "docker.elastic.co/kibana/kibana:7.6.2"

  beam_tracker:
    build: "./Beam/go/cmd/tracker"
    depends_on:
      - "zookeeper"
    restart: "unless-stopped"

  beam_segments:
    build: "./Beam/go/cmd/segments"
    depends_on:
      - "elasticsearch"
    restart: "unless-stopped"

volumes:
  kafka-data:
    driver: "local"
  mysql-data:
    driver: "local"
  redis-data:
    driver: "local"
  elastic-data:
    driver: "local"

networks:
  default:
